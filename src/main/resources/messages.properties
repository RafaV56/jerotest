##Este documento reemplaza por defecto las anotaciones de validacíon, recuerda cambiar a utf-8 con el documento cerrado y después cambia los acentos
NotEmpty:El campo no puede estar vacío
##Usamos el nombre de la clase y su atributo
#NotBlank.usuarioValido.nombre:El nombre no puede estar vacío ni contener espacios en blanco (messages.properties)
##Lo usamos en la clase validadora UsusarioValidador
#NotEmpty.usuarioValido.apellido:El apellido no puede estar vacío (messages.properties)
#size.usuarioValido.apellido:El apellido no puede tener menos de 3 y máximo 8 caracteres (messages.properties)
size.usuario.nombre:El nombre no puede tener menos de 3 y máximo 50 caracteres
null.usuario.nombre:El nombre no puede ser nulo
letras.usuario.nombre:El nombre no puede tener números ni caracteres especiales
null.usuario.talla:La talla no puede ser nula
null.usuario.peso:El peso no puede ser nulo
null.usuario.dia:El día no puede ser nulo
null.usuario.mes:El mes no puede ser nulo
null.usuario.anno:El año no puede ser nulo
null.usuario.hora:La hora no puede ser nulo (propertiers)
null.usuario.minuto:El minuto no puede ser nulo

error.usuario.dia:Error en la fecha
#ValidarLongitud.usuarioValido.nombre:El nombre no puede tener menos de 3 y máximo 8 caracteres (ValidarLongitud)
##Verificamos que el número no sea null
#NotNull.usuarioValido.annos:Los años son nulos (messages.properties)
##Si hay errores de poner un texto en un campo Integer se usa lo siguiente, así el mensaje de error se cambia
#typeMismatch.usuarioValido.annos=Los años no pueden se nulos (messages.properties)
##Un mensaje más generico por si falla una campo número
typeMismatch.java.lang.Integer=El campo no puede tener letras
typeMismatch.java.lang.Double=El campo no puede tener letras
